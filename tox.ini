# Tox runner configuration
#
# The following optional environment variables can change behaviour. See the
# comments where they are used for more information.
#
# - TOXINI_ARTEFACT_DIR
# - TOXINI_FLAKE8_VERSION
# - TOXINI_WORK_DIR
#
[tox]
# Envs which should be run by default.
envlist=py3
# Allow overriding toxworkdir via environment variable
toxworkdir={env:TOXINI_WORK_DIR:{toxinidir}/.tox}
# We do not actually ship a setup.py file which is used by our deployment.
# Django projects instead prefer to add the project directories to the Python
# path. (Or, with the current working directory being the project.) The
# skipsdist option tells tox it is OK to not run "setup.py install" for our
# project.
skipsdist=True

# The "_vars" section is ignored by tox but we place some useful shared
# variables in it to avoid needless repetition.
[_vars]
# Where to write build artefacts. We default to the "build" directory in the
# tox.ini file's directory. Override with the TOXINI_ARTEFACT_DIR environment
# variable.
build_root={env:TOXINI_ARTEFACT_DIR:{toxinidir}/build}/{envname}

[testenv]
# Which environment variables should be passed into the environment.
passenv=
#   Any additional settings
    EXTRA_SETTINGS_URLS
    EXTERNAL_SETTING_*
#   "Old-style" database configuration. See comment in settings/tox.py
    DJANGO_DB_*
#   Allow people to override the coverage report location should they so wish.
    COVERAGE_FILE
#   Disable HTTP -> HTTPS redirect for tests
    DANGEROUS_DISABLE_HTTPS_REDIRECT
#   Allow configuration of external databases.
    TEST_USE_EXTERNAL_DATABASE
#   External docker configuration
    DOCKER_*
# Specify the default environment. Note that tox will *always* use the testsuite
# settings unless overridden by TOX_DJANGO_SETTINGS_MODULE. Just setting
# DJANGO_SETTINGS_MODULE will not override it.
setenv=
    TOX_STATIC_ROOT={[_vars]build_root}/static
# How to run the test suite. Note that arguments passed to tox are passed on to
# the test command.
allowlist_externals=
    poetry
commands_pre=
    poetry sync --no-root
commands=
    coverage run --source={toxinidir} -m pytest --junitxml={[_vars]build_root}/junit.xml {posargs}
    coverage html --directory {[_vars]build_root}/htmlcov/
    coverage report
    coverage xml -o {env:COVERAGE_XML_FILE:{[_vars]build_root}/coverage.xml}

[testenv:py3]
basepython=python3
